services:
  db:
    image: postgres:15-alpine
    command: -c fsync=off -c full_page_writes=off
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - url_shortener_postgres_data:/var/lib/postgresql/data

  nats:
    image: nats:latest
    container_name: nats_server
    ports:
      - '4222:4222' # NATS client connections
      - '8222:8222' # NATS monitoring dashboard
    command: ['-js'] # enable JetStream (optional, for persistence)

  redis-stack:
    image: redis/redis-stack:7.0.6-RC9
    ports:
      - 6379:6379
      - 8001:8001

  url-shortener:
    build:
      context: .
      dockerfile: Dockerfile.app
    ports:
      - '3000:3000'
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_READ_ONLY_HOST=db
      - REDIS_URL=redis://redis-stack:6379
      - REDIS_TLS=false
      - NATS_ENDPOINT=nats://nats:4222
      - LOG_LEVEL=INFO
      - STAGE=production
    depends_on:
      - db
      - nats
      - redis-stack

  analytics:
    build:
      context: .
      dockerfile: Dockerfile.analytics
    ports:
      - '3001:3001'
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_READ_ONLY_HOST=db
      - NATS_ENDPOINT=nats://nats:4222
      - LOG_LEVEL=INFO
      - STAGE=production
    depends_on:
      - db
      - nats
      - redis-stack

volumes:
  url_shortener_postgres_data:
    driver: local
